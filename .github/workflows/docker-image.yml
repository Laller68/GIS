version: "3.7"

volumes:
    prometheus_data: {}
    grafana_data: {}

networks:
  monitoring:
    ipam:
      config:
        - subnet: 172.20.0.0/24
#    external: true

services:

#  nginx_manager:
#    image: 'jc21/nginx-proxy-manager:latest'
#    container_name: nginx_manager
#    restart: unless-stopped
#    ports:
#      - '80:80'
#      - '81:81'
#      - '443:443'
#      - '9999:9999'
#    volumes:
#      - ./data:/data
#      - ./letsencrypt:/etc/letsencrypt
#    networks:
#        monitoring:
#          ipv4_address: 172.20.0.11

  nginx:
    container_name: nginx
    image: nginx:latest
    restart: always
    ports:
     - 80:80
     - 81:81
     - 443:443
     - 9999:9999
    networks:
        monitoring:
          ipv4_address: 172.20.0.11

#  nginx-exporter:
#      image: nginx/nginx-prometheus-exporter:0.8.0
#      command:
#        - -nginx.scrape-uri
#        - http://127.0.0.1:9999/stub_status

  portainer:
    image: portainer/portainer-ee:latest
    container_name: portainer
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./portainer-data:/data
    ports:
      - 9443:9443
    networks:
        monitoring:
          ipv4_address: 172.20.0.6

  prometheus:
    image: prom/prometheus:v2.36.2
    container_name: prometheus
    volumes:
      - ./prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
      - '--web.console.templates=/usr/share/prometheus/consoles'
    ports:
      - 9090:9090

    links:
      - cadvisor:cadvisor
      - alertmanager:alertmanager
      - pushgateway:pushgateway
    depends_on:
      - cadvisor
      - pushgateway
    networks:
        monitoring:
          ipv4_address: 172.20.0.2

    restart: always    
    labels:
      org.label-schema.group: "monitoring"

  node-exporter:
    image: prom/node-exporter:latest
    container_name: node-exporter
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - '--path.procfs=/host/proc'
      - '--path.rootfs=/rootfs'
      - '--path.sysfs=/host/sys'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc|wifi)($$|/)'
    restart: unless-stopped
    expose:
      - 9100
    ports:
      - 9100:9100
    networks:
        monitoring:
          ipv4_address: 172.20.0.7

    labels:
      org.label-schema.group: "monitoring"

  alertmanager:
    image: prom/alertmanager
    container_name: alertmanager
    ports:
      - 9093:9093
    volumes:
      - ./alertmanager/:/etc/alertmanager/
    networks:
        monitoring:
          ipv4_address: 172.20.0.3
    restart: always
    command:
      - '--config.file=/etc/alertmanager/alertmanager.yml'
      - '--storage.path=/alertmanager'
 
  cadvisor:
    image: gcr.io/cadvisor/cadvisor
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:rw
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    ports:
      - 8080:8080
    networks:
        monitoring:
          ipv4_address: 172.20.0.4
    restart: always

  grafana:
#    image: grafana/grafana-enterprise:8.5.5
    image: grafana
    container_name: grafana
    user: "root"

    links:
      - prometheus
      - loki
      - promtail
    depends_on:
      - prometheus
      - loki
      - promtail
    ports:
      - 3000:3000

#    healthcheck:
#      test: ["CMD-SHELL", "curl -f localhost:3000/api/health && echo 'ready'"]
#      interval: 10s
#      retries: 10

    volumes:
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources    
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
      
    environment:
      - GF_SERVER_DOMAIN=localhost
      - GF_SERVER_ROOT_URL=http://localhost:3000 
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=Veres123
      - GF_USERS_DEFAULT_THEME=dark
      - GF_USERS_ALLOW_SIGN_UP=false
      - GF_USERS_ALLOW_ORG_CREATE=false
      - GF_AUTH_BASIC_ENABLED=false
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Admin
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_PATHS_CONFIG=/etc/grafana/grafana.ini
      - GF_PATHS_DATA=/var/lib/grafana
      - GF_PATHS_HOME=/usr/share/grafana
      - GF_PATHS_LOGS=/var/log/grafana
      - GF_PATHS_PLUGINS=/var/lib/grafana/plugins
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
      - GF_DASHBOARDS_DEFAULT_HOME_DASHBOARD_PATH=/etc/grafana/provisioning/dashboards/Home-DEV-IT.json

    networks:
        monitoring:
          ipv4_address: 172.20.0.10
    restart: always
  
  loki:
    image: grafana/loki:2.6.1
    container_name: loki
    ports:
      - 3100:3100
    healthcheck:
      test: wget -q --tries=1 -O- http://127.0.0.1:3100/ready|grep -q "ready"
      interval: 30s
      timeout: 5s
      retries: 3
    command: -config.file=/etc/loki/local-config.yaml
    networks:
        monitoring:
          ipv4_address: 172.20.0.9

  promtail:
    image: grafana/promtail:2.6.1
    container_name: promtail
    ports:
      - 9080:9080
    volumes:
      - /var/log:/var/log
    command: -config.file=/etc/promtail/config.yml
    networks:
        monitoring:
          ipv4_address: 172.20.0.8

  pushgateway:
    image: prom/pushgateway
    container_name: pushgateway
    restart: always
    expose:
     - 9091
    ports:
     - 9091:9091
    networks:
       monitoring:
          ipv4_address: 172.20.0.5
